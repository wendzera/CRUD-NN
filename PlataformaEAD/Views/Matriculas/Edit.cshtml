@model PlataformaEAD.ViewModels.EditarMatriculaViewModel

@{
    ViewData["Title"] = "Editar Matrícula";
}

<div class="container">
    <h1>Editar Matrícula</h1>
    
    <div class="card mb-4">
        <div class="card-body">
            <h6 class="card-subtitle mb-2 text-muted">
                <i class="fas fa-user"></i> @Model.AlunoNome - 
                <i class="fas fa-book"></i> @Model.CursoTitulo
            </h6>
        </div>
    </div>

    <div class="row">
        <div class="col-md-8">
            <form asp-action="Edit">
                <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>
                
                <input type="hidden" asp-for="AlunoId" />
                <input type="hidden" asp-for="CursoId" />
                
                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label asp-for="Data" class="form-label">Data da Matrícula</label>
                            <input asp-for="Data" class="form-control" type="datetime-local" />
                            <span asp-validation-for="Data" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label asp-for="PrecoPago" class="form-label">Preço Pago</label>
                            <div class="input-group">
                                <span class="input-group-text">R$</span>
                                <input asp-for="PrecoPago" class="form-control" type="number" step="0.01" min="0" />
                            </div>
                            <span asp-validation-for="PrecoPago" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                
                <div class="row">
                    <div class="col-md-4">
                        <div class="mb-3">
                            <label asp-for="Status" class="form-label">Status</label>
                            <select asp-for="Status" class="form-select" id="statusSelect">
                                <option value="@((int)PlataformaEAD.Models.StatusMatricula.Ativo)">Ativo</option>
                                <option value="@((int)PlataformaEAD.Models.StatusMatricula.Concluido)">Concluído</option>
                                <option value="@((int)PlataformaEAD.Models.StatusMatricula.Cancelado)">Cancelado</option>
                            </select>
                            <span asp-validation-for="Status" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="mb-3">
                            <label asp-for="Progresso" class="form-label">Progresso (%)</label>
                            <div class="input-group">
                                <input asp-for="Progresso" class="form-control" type="range" min="0" max="100" 
                                       oninput="document.getElementById('progressoValue').value = this.value" />
                                <input type="number" id="progressoValue" class="form-control" 
                                       style="max-width: 80px;" min="0" max="100" 
                                       oninput="document.querySelector('input[name=Progresso]').value = this.value"
                                       value="@Model.Progresso" />
                                <span class="input-group-text">%</span>
                            </div>
                            <span asp-validation-for="Progresso" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="mb-3">
                            <label asp-for="NotaFinal" class="form-label">Nota Final</label>
                            <input asp-for="NotaFinal" class="form-control" type="number" step="0.01" min="0" max="10" />
                            <span asp-validation-for="NotaFinal" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                
                <div class="mb-3">
                    <div class="progress mb-2" style="height: 25px;">
                        <div class="progress-bar progress-bar-striped" id="progressBar" role="progressbar" 
                             style="width: @Model.Progresso%;">
                            @Model.Progresso%
                        </div>
                    </div>
                </div>
                
                <div class="mb-3">
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save"></i> Salvar Alterações
                    </button>
                    <a asp-action="Index" class="btn btn-secondary">
                        <i class="fas fa-arrow-left"></i> Voltar
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        // Atualizar barra de progresso em tempo real
        function updateProgress() {
            const progresso = document.querySelector('input[name="Progresso"]').value;
            const progressBar = document.getElementById('progressBar');
            const progressValue = document.getElementById('progressoValue');
            
            progressBar.style.width = progresso + '%';
            progressBar.textContent = progresso + '%';
            progressValue.value = progresso;
            
            // Mudar cor da barra baseado no progresso
            progressBar.className = 'progress-bar progress-bar-striped';
            if (progresso == 100) {
                progressBar.classList.add('bg-success');
            } else if (progresso >= 75) {
                progressBar.classList.add('bg-info');
            } else if (progresso >= 50) {
                progressBar.classList.add('bg-warning');
            } else {
                progressBar.classList.add('bg-secondary');
            }
        }

        // Event listeners
        document.querySelector('input[name="Progresso"]').addEventListener('input', updateProgress);
        document.getElementById('progressoValue').addEventListener('input', updateProgress);

        // Validação para status concluído
        document.getElementById('statusSelect').addEventListener('change', function() {
            const progresso = document.querySelector('input[name="Progresso"]').value;
            if (this.value == '@((int)PlataformaEAD.Models.StatusMatricula.Concluido)' && progresso < 100) {
                alert('Para alterar o status para "Concluído", o progresso deve ser 100%.');
            }
        });

        // Inicializar
        updateProgress();
    </script>
}