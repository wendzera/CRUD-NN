@model PlataformaEAD.ViewModels.MatriculaViewModel

@{
    ViewData["Title"] = "Nova Matrícula";
}

<div class="container">
    <h1>Nova Matrícula</h1>

    <div class="row">
        <div class="col-md-8">
            <form asp-action="Create" id="matriculaForm">
                <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>
                
                <div class="mb-3">
                    <label asp-for="AlunoId" class="form-label">Aluno</label>
                    <select asp-for="AlunoId" class="form-select" asp-items="@(new SelectList(Model.Alunos, "Id", "Nome"))">
                        <option value="">Selecione um aluno...</option>
                    </select>
                    <span asp-validation-for="AlunoId" class="text-danger"></span>
                </div>
                
                <div class="mb-3">
                    <label class="form-label">Cursos</label>
                    <div class="border p-3 rounded bg-light" style="max-height: 200px; overflow-y: auto;">
                        @if (Model.Cursos.Any())
                        {
                            @for (int i = 0; i < Model.Cursos.Count; i++)
                            {
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" name="CursoIds" value="@Model.Cursos[i].Id" 
                                           id="curso_@Model.Cursos[i].Id" 
                                           @(Model.CursoIds.Contains(Model.Cursos[i].Id) ? "checked" : "")>
                                    <label class="form-check-label" for="curso_@Model.Cursos[i].Id">
                                        <strong>@Model.Cursos[i].Titulo</strong>
                                        <br><small class="text-muted">Preço base: R$ @Model.Cursos[i].PrecoBase.ToString("N2") - @Model.Cursos[i].CargaHoraria h</small>
                                    </label>
                                </div>
                                @if (i < Model.Cursos.Count - 1)
                                {
                                    <hr class="my-2">
                                }
                            }
                        }
                        else
                        {
                            <p class="text-muted">Nenhum curso disponível. <a asp-controller="Cursos" asp-action="Create">Cadastre um curso primeiro</a>.</p>
                        }
                    </div>
                    <span asp-validation-for="CursoIds" class="text-danger"></span>
                </div>
                
                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label asp-for="Data" class="form-label">Data da Matrícula</label>
                            <input asp-for="Data" class="form-control" type="datetime-local" />
                            <span asp-validation-for="Data" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label asp-for="PrecoPago" class="form-label">Preço Pago</label>
                            <div class="input-group">
                                <span class="input-group-text">R$</span>
                                <input asp-for="PrecoPago" class="form-control" type="number" step="0.01" min="0" />
                            </div>
                            <span asp-validation-for="PrecoPago" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                
                <div class="row">
                    <div class="col-md-4">
                        <div class="mb-3">
                            <label asp-for="Status" class="form-label">Status</label>
                            <select asp-for="Status" class="form-select">
                                <option value="@((int)PlataformaEAD.Models.StatusMatricula.Ativo)">Ativo</option>
                                <option value="@((int)PlataformaEAD.Models.StatusMatricula.Concluido)">Concluído</option>
                                <option value="@((int)PlataformaEAD.Models.StatusMatricula.Cancelado)">Cancelado</option>
                            </select>
                            <span asp-validation-for="Status" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="mb-3">
                            <label asp-for="Progresso" class="form-label">Progresso (%)</label>
                            <input asp-for="Progresso" class="form-control" type="number" min="0" max="100" />
                            <span asp-validation-for="Progresso" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="mb-3">
                            <label asp-for="NotaFinal" class="form-label">Nota Final</label>
                            <input asp-for="NotaFinal" class="form-control" type="number" step="0.01" min="0" max="10" />
                            <span asp-validation-for="NotaFinal" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                
                <div class="mb-3">
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save"></i> Salvar
                    </button>
                    <a asp-action="Index" class="btn btn-secondary">
                        <i class="fas fa-arrow-left"></i> Voltar
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        // Validação personalizada para garantir que pelo menos um curso seja selecionado
        document.getElementById('matriculaForm').addEventListener('submit', function(e) {
            const checkboxes = document.querySelectorAll('input[name="CursoIds"]:checked');
            if (checkboxes.length === 0) {
                e.preventDefault();
                alert('Selecione pelo menos um curso para a matrícula.');
            }
        });

        // Atualizar preço automaticamente baseado nos cursos selecionados
        const cursosCheckboxes = document.querySelectorAll('input[name="CursoIds"]');
        const precoInput = document.querySelector('input[name="PrecoPago"]');
        
        if (cursosCheckboxes.length > 0 && precoInput) {
            const precosCursos = @Html.Raw(Json.Serialize(Model.Cursos.ToDictionary(c => c.Id, c => c.PrecoBase)));
            
            cursosCheckboxes.forEach(checkbox => {
                checkbox.addEventListener('change', function() {
                    let total = 0;
                    const selecionados = document.querySelectorAll('input[name="CursoIds"]:checked');
                    selecionados.forEach(selected => {
                        total += precosCursos[selected.value] || 0;
                    });
                    precoInput.value = total.toFixed(2);
                });
            });
        }
    </script>
}